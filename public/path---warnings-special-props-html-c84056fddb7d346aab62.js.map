{"version":3,"sources":["webpack:///path---warnings-special-props-html-c84056fddb7d346aab62.js","webpack:///./.cache/json/warnings-special-props-html.json"],"names":["webpackJsonp","414","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2mBAAogBC,aAA6HC,MAAA,wBAAAC,KAAA,KAAAC,KAAA,MAAwDC,QAAWC,KAAA,4BAAAC,KAAA,iCAA0EC,aAAgBD,KAAA","file":"path---warnings-special-props-html-c84056fddb7d346aab62.js","sourcesContent":["webpackJsonp([212628910320266],{\n\n/***/ 414:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Most props on a JSX element are passed on to the component, however, there are two special props (<code>ref</code> and <code>key</code>) which are used by React, and are thus not forwarded to the component.</p>\\n<p>For instance, attempting to access <code>this.props.key</code> from a component (eg. the render function) is not defined.  If you need to access the same value within the child component, you should pass it as a different prop (ex: <code>&#x3C;ListItemWrapper key={result.id} id={result.id} /></code>). While this may seem redundant, it’s important to separate app logic from reconciling hints.</p>\",\"frontmatter\":{\"title\":\"Special Props Warning\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"warnings/special-props.md\",\"slug\":\"warnings/special-props.html\"}}},\"pathContext\":{\"slug\":\"warnings/special-props.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---warnings-special-props-html-c84056fddb7d346aab62.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Most props on a JSX element are passed on to the component, however, there are two special props (<code>ref</code> and <code>key</code>) which are used by React, and are thus not forwarded to the component.</p>\\n<p>For instance, attempting to access <code>this.props.key</code> from a component (eg. the render function) is not defined.  If you need to access the same value within the child component, you should pass it as a different prop (ex: <code>&#x3C;ListItemWrapper key={result.id} id={result.id} /></code>). While this may seem redundant, it’s important to separate app logic from reconciling hints.</p>\",\"frontmatter\":{\"title\":\"Special Props Warning\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"warnings/special-props.md\",\"slug\":\"warnings/special-props.html\"}}},\"pathContext\":{\"slug\":\"warnings/special-props.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/warnings-special-props-html.json\n// module id = 414\n// module chunks = 212628910320266"],"sourceRoot":""}